Implement int sqrt(int x).
Compute and return the square root of x, where x is guaranteed to be a non-negative integer.
Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.

Example 1:
Input: 4
Output: 2

Example 2:
Input: 8
Output: 2

Explanation: The square root of 8 is 2.82842..., and since 
             the decimal part is truncated, 2 is returned.
             
Link: https://leetcode-cn.com/problems/sqrtx
/*************************************************************************************/
package LeetCode;

public class SqrtX {

	public int mySqrt1(int x) {
		//consider the possible value, it is better to set long type rather than int type
		//the left border should be 0 for the value of 0
//		//or here could be 
//        if (x == 0) {
//            return 0;
//        }
//        long left = 1;//so that, the possibility of 0 is concluded
        long left = 0; 
        //the right border should be x/2 + 1 for the value of 1
        long right = x / 2 + 1;
        while (left < right) {
            // Note: the mid value must be the right mid value, or the loop would be dead
            // long mid = left + (right - left + 1) / 2;
            long mid = (left + right + 1) >>> 1;//right move means division 2
            long square = mid * mid;
            if (square > x) {
                right = mid - 1;
            } else {
                left = mid;
            }
        }
        return (int) left;
    }
	
	public int mySqrt2(int x) {
        long left = 0;
        long right = Integer.MAX_VALUE;
        while (left < right) {
            long mid = (left + right + 1) >>> 1;
            long square = mid * mid;
            if (square > x) {
                right = mid - 1;
            } else {
                left = mid;
            }
        }
        return (int) left;
    }
	
    public int mySqrt3(int a) {
//        long x = 1;
//        while (Math.abs(x-a) > 1e-6) {
//            x = (x + a / x) / 2;
//        }
//        return (int) x;
        long x = a;
        while (x * x > a) {
            x = (x + a / x) / 2;
        }
        return (int) x;
    }
	
	public static void main(String[] args) {
		int x = 8;
		SqrtX s = new SqrtX();
		int result = s.mySqrt3(x);
		System.out.println("The sqrt result of "+String.valueOf(x)+" is "+String.valueOf(result));

	}

}
