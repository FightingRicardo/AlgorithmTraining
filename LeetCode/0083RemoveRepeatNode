Given a sorted linked list, delete all duplicates such that each element appear only once.

Example 1:
Input: 1->1->2
Output: 1->2

Example 2:
Input: 1->1->2->3->3
Output: 1->2->3

Link: https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list
/****************************************************************************/

package LeetCode;

public class DeleteRepeatNode {

	static void prt(String s) {
		System.out.println(s);
	}
    public ListNode deleteDuplicates(ListNode head) {
    	
        ListNode pre = head;
        ListNode post = head.next;
        
        while(post != null) {
            if(pre.val == post.val)
            	pre.next = post.next;
            else
            	pre = pre.next;           	
            post = post.next;
        }
    	return head;
    }
    
	public static void main(String[] args) {
		ListNode n1 = new ListNode(1);
		ListNode n2 = new ListNode(3);
		ListNode n3 = new ListNode(3);
		ListNode n4 = new ListNode(3);
		ListNode n5 = new ListNode(4);
		
		n1.next = n2;
		n2.next = n3;
		n3.next = n4;
		n4.next = n5;
		
		DeleteRepeatNode drn = new DeleteRepeatNode();
		ListNode tmp = drn.deleteDuplicates(n1);
		
		prt(String.valueOf(n1.val));		
		while(tmp.next != null) {
			prt(String.valueOf(tmp.next.val));
			tmp = tmp.next;
		}
	}

}
