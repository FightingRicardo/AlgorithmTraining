Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.

Each number in candidates may only be used once in the combination.

Note:
All numbers (including target) will be positive integers.
The solution set must not contain duplicate combinations.

Example 1:
Input: candidates = [10,1,2,7,6,1,5], target = 8,
A solution set is:
[
  [1, 7],
  [1, 2, 5],
  [2, 6],
  [1, 1, 6]
]

Example 2:
Input: candidates = [2,5,2,1,2], target = 5,
A solution set is:
[
  [1,2,2],
  [5]
]

Link: https://leetcode-cn.com/problems/combination-sum-ii
/****************************************************************************/
package LeetCode;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;

public class CombinationSum {

	public ArrayList<ArrayList<Integer>> easyversion(int[] candidates, int target) {
		ArrayList<ArrayList<Integer>> res1 = new ArrayList<ArrayList<Integer>>();
		
		if(candidates == null && candidates.length < 1)
			return res1;
		
		Arrays.sort(candidates);
		backtracking_medium(candidates, 0, target, res1, new ArrayList<Integer>());
		return res1;
	}
	
	private void backtracking_medium(int[] nums, int start, int target, ArrayList<ArrayList<Integer>> res, ArrayList<Integer> list) {
		if(target<0) {
			return;
		}
		else if(target==0) { 
			res.add(new ArrayList<>(list));
			return;
		}
		else {
			for(int i = start; i < nums.length; i++) {
				//target -= nums[i];
				list.add(nums[i]);
				backtracking_medium(nums, i+1, target - nums[i], res, list);
				list.remove(list.size()-1);//remove the last element
				
				while(i+1<nums.length&&nums[i]==nums[i+1]) {
					i++;
				}
			}
		}		
	}

	static void prt(String s) {
		System.out.print(s);
	}
	
	public static void main(String[] args) {
		int[] candidate = {2,5,2,1,2};
		int target = 5;
		
		CombinationSum cs = new CombinationSum();
		ArrayList<ArrayList<Integer>> result = cs.easyversion(candidate, target);

		for(int i = 0;i<result.size();i++) {
			ArrayList<Integer> tmplist = result.get(i);
			System.out.println("Array "+String.valueOf(i));
			for(int j = 0;j<tmplist.size();j++) {
				prt(String.valueOf(tmplist.get(j))+",");
			}
			System.out.println("");
		}
		
	}

}
